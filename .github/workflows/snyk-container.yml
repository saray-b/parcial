name: Snyk Container Security Scan

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Ejecutar todos los miércoles a las 9:18 AM UTC
    - cron: '18 9 * * 3'

permissions:
  contents: read

jobs:
  snyk-container-scan:
    permissions:
      contents: read # para actions/checkout
      security-events: write # para subir resultados SARIF
      actions: read # requerido para repositorios privados
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        docker build -t mi-app:${{ github.sha }} .
        docker tag mi-app:${{ github.sha }} mi-app:latest
    
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: mi-app:latest
        args: --file=Dockerfile --sarif-file-output=snyk.sarif
    
    - name: Check if SARIF file exists
      run: |
        if [ -f "snyk.sarif" ]; then
          echo "✅ SARIF file found"
          ls -la snyk.sarif
          head -20 snyk.sarif
        else
          echo "❌ SARIF file not found"
          echo "Files in current directory:"
          ls -la
          echo "Creating empty SARIF file to prevent upload failure"
          echo '{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"Snyk"}},"results":[]}]}' > snyk.sarif
        fi
    
    - name: Upload Snyk results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('snyk.sarif') != ''
      with:
        sarif_file: snyk.sarif
        
    - name: Upload Snyk JSON results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: snyk-vulnerability-report
        path: snyk-results.json
